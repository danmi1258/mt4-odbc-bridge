<html>
<head>
<title>CGOdbcEx</title>
</head>
<body>
<p>Other classes of library can throw <code><b>CGOdbcEx</b></code> to signal about errors.
Errors can be ODBC errors or errors of library usage.</p>
<p><b>Methods</b></p>
<p><code><font color=blue>bool <b>isUsage</b>();</font></code><br>
Method return <code>true</code> if error is user of library usage and <code>false</code>
if error is ODBC error.</p>

<p><code><font color=blue>long <b>getCode</b>();</font></code><br>
Method returns code of usage error or ODBC's native error code.
List of usage error codes is shown below:<br>
<table width=100%>
<tr><td width=15% valign=top><code>CGOdbcEx::eTypeIsIncompatible</td><td width=5%><td>Requested datatype of parameter or column is not compatible with real datatype.</td>
<tr><td width=15% valign=top><code>CGOdbcEx::eIndexOutOfRange</td><td width=5%><td>Index is out of range</td>
<tr><td width=15% valign=top><code>CGOdbcEx::eFieldNotFound</td><td width=5%><td>Field is not found in cursor</td>
<tr><td width=15% valign=top><code>CGOdbcEx::eAllParameterAlreadyBound</td><td width=5%><td>All parameters are already bound</td></table></p>

<p><code><font color=blue>const char *<b>getMsg</b>();</font></code><br>
Method returns textual description of the error.</p>
<p><b>Example</b></p>
<table bgcolor=#F0F0F0 width=100%><tr><td><pre>
    try
    {
        pStmt->execute("select * from table");
    }
    catch(<b>CGOdbcEx</b> *pEx)
    {
        MessageBox(m_hWnd, pEx->getMsg(), "Error", MB_OK);
    }
</pre></p>

</body>
</html>
